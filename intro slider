// import {StyleSheet, TouchableOpacity, View, Text, Button} from 'react-native';
import React,{useState,useRef} from 'react';
import {
  SafeAreaView,
  ScrollView,
  StatusBar,
  StyleSheet,
  Text,
 Animated,
  View,
  FlatList,
  TouchableOpacity,
  Image
} from 'react-native';
import {useDispatch} from 'react-redux'
import Onboard from './Onboard';
import Paginator from './paginator';
import {
    widthPercentageToDP as wt,
    heightPercentageToDP as ht,
  } from "react-native-responsive-screen";
import NextButton from './NexrButton';
const DATA = [
    {
      id: "s1",
      // text: "50+ Services, Repairs, Insurance, Xchange & Accessories",
      title: "India's Premium Car Care Service Brand",
      title2: "Care Service Brand",
      image: require("../../images/intro/ppp.png"),
      image2: require("../../images/welcome/Logo.png"),
      backgroundColor: "white",
      width: wt(75),
      height: ht(25),
    },
    {
      id: "s2",
      title: "One Stop Shop For All Your Car Needs",
      text: "Click & Book in Minute",
      image: require("../../images/intro/rrr.jpg"),
      backgroundColor: "white",
      width: wt(85),
      height: ht(30),
    },
    {
      id: "s3",
      title: "Your Car Deserves The Finest",
      text: "Doorstep pickup & Delivery",
      image: require("../../images/intro/sss.jpg"),
      backgroundColor: "white",
      width: wt(95),
      height: ht(37),
    },
  ];

const AppIntro = props => {
  // console.log(props.navigation);
const dispatch = useDispatch();
const [currentIndex ,setcurrentIndex]=useState(0)
const scrollX=useRef(new Animated.Value(0)).current;
const slideRef=useRef(null)
const [showFirstTime,setShowFirstTime]=useState(true);
const viewableItemsChanged = useRef(({viewableItems})=> {
  setcurrentIndex(viewableItems[0].index)
  // Use viewable items in state or as intended
}).current
const viewConfigRef =useRef({ viewAreaCoveragePercentThreshold: 50 }).current

const onScrollTo=()=>{
   if(currentIndex<DATA.length-1){
      slideRef.current.scrollToIndex({index:currentIndex+1})
   }else{
    props.onLast()
    console.log("LAST")
   }
}


  return(  <View style={styles.screen1}>
    <View>
    <FlatList
    data={DATA}
    horizontal
    bounces={false}
    pagingEnabled
    keyExtractor={(item)=>item.id}
    onScroll={Animated.event(
      // scrollX = e.nativeEvent.contentOffset.x
      [{ nativeEvent: {
           contentOffset: {
             x: scrollX
           }
         }
       }],{
         useNativeDriver:false
       }
    )}
    viewabilityConfig={viewConfigRef}
    onViewableItemsChanged={viewableItemsChanged}
    renderItem={({item})=><Onboard item={item}/>}
    ref={slideRef}
    showsHorizontalScrollIndicator={false}
    />
    </View>
    {/* <Image source={require('../../mlogo.png')} style={{width:100,height:50,resizeMode:'contain'}} /> */}
    <Paginator scrollX={scrollX} data={DATA}/>
    <NextButton scrollTo={onScrollTo} percentage={(currentIndex+1)*(100/DATA.length)} />
    </View>);
}


 
const styles = StyleSheet.create({
  screen: {
    flex: 1,
  },

  screen1:{
    backgroundColor:'white'
      },

});

export default AppIntro;
